% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{forest}
\alias{forest}
\alias{plot.forest}
\title{Forest plot}
\usage{
forest(x, ..., header = FALSE, plotArgs = list(), plot = TRUE)

\method{plot}{forest}(x, panel_size = c(0.3, 0.45, 0.25), col.rows,
  center_panel = NULL, header = FALSE, type = c("ci", "box",
  "tplot"), show_percent = TRUE, names = NULL, show_conf = FALSE,
  labels = NULL, xlim = NULL, axes = TRUE, logx = FALSE,
  inner.mar = c(0, 0, 0, 0), reset_par = TRUE, layout = c("split",
  "unified"), ...)
}
\arguments{
\item{x}{an object returned by \code{\link{prepare_list}} or an object of
a supported class}

\item{...}{additional arguments passed to other methods or graphical
parameters passed to \code{\link{par}}}

\item{header}{logical or a vector of character strings used as labels for
each variable in the model}

\item{plotArgs}{a named list of additional arguments passed to
\code{plot.forest}}

\item{plot}{logical; if \code{TRUE}, a forest plot is generated; otherwise,
a list of data to plot is returned (see \code{plot.forest})}

\item{panel_size}{proportional size of \code{c(left, middle, right)} panels}

\item{col.rows}{optional vector of colors for each row}

\item{center_panel}{(dev) optional function used to draw the plot}

\item{type}{type of plot for middle panel (currently only \code{"point"}) is
supported}

\item{show_percent}{logical; if \code{TRUE}, percents are shown for each row}

\item{names}{optional vector of length 4 giving the labels for each column}

\item{show_conf}{logical; if \code{TRUE}, the confidence interval is show
with the estimate}

\item{labels}{optional vector of labels for each row term}

\item{xlim}{the x-axis limits of the plot}

\item{axes}{logical; if \code{TRUE}, the x-axis is plotted (default); to
show a custom axis, set \code{reset_par = FALSE} and use \code{\link{axis}}}

\item{logx}{logical; if \code{TRUE}, the x-axis will be logarithmic}

\item{inner.mar}{margins for the plot panel}

\item{reset_par}{logical; if \code{TRUE}, the graphical parameters are
reset to their state before the function call; use \code{FALSE} to
continue adding to the middle panel figure}

\item{layout}{layout of figure, either \code{"split"} where plot splits
the text columns or \code{"unified"} where the text columns are adjacent}
}
\description{
A forest plot.
}
\examples{
library('survival')
lung2 <- within(lung, {
  sex <- factor(sex, 1:2, c('Male','Female'))
  ph.ecog <- factor(ph.ecog, 0:2)
})

x <- coxph(Surv(time, status) ~ age + sex + ph.ecog +
             I(meal.cal > 325.5) +
             I(wt.loss < 9.5) +
             I(ph.karno > 85) +
             I(pat.karno > 65), lung2)
             
x <- forest(x)
plot(x, show_conf = TRUE)

palette(c('grey70', 'green4'))
plot(x, show_conf = TRUE, cex = 3)
palette('default')


## equivalent ways to make forest plot
x <- coxph(Surv(time, status) ~ age + sex + ph.ecog, lung2)
clean <- cleanfp(x)
clean_ref <- add_reference(clean)
prep_list <- prepare_forest(clean_ref)
plot(prep_list)

## or
forest(x, header = c('Age in years', 'Sex', 'ECOG PS'))


## plot.forest gives more options
plot(prep_list, xlim = c(0, 2.5),
     center_panel = {
       panel_box(replicate(6, runif(20, 0, 2), simplify = FALSE))
       axis(1, mgp = c(3, 2, 1))
     })


fp <- forest(glm(vs ~ factor(gear) + wt + hp, mtcars,
                 family = 'binomial'),
             plot = FALSE)
plot(fp, labels = c(paste('Gear -', 3:5), 'Weight (1k lbs)', 'Horse Power'))


## multiple models
cx1 <- coxph(Surv(time, status) ~ age + sex + ph.ecog, lung2)
cx2 <- coxph(Surv(time, status) ~ age + sex, lung2)
cx3 <- coxph(Surv(time, status) ~ age, lung2)

models <- list(cx1, cx2, cx3)
prep_lists <- lapply(models, forest, plot = FALSE)
prep_lists <- lapply(prep_lists, function(x)
  `class<-`(x[[1L]], 'cleanfp_list'))
x <- Reduce(merge_forest, prep_lists)

group.col <- rep_len(c('grey95', 'none'), length(models))
group.col <- rep(group.col, sapply(prep_lists, function(x) length(x$Term)))
plot(x, col.rows = group.col)


## competing risks regression
library('cmprsk')
x <- with(transplant,
  crr(futime, as.integer(event) - 1,
      cov1 = cbind(age, model.matrix(~ sex + abo)[, -1, drop = FALSE])))
forest(x, ~ age + sex + abo, transplant)


library('cmprsk2')
x <- crr2(Surv(futime, event(censored) == death) ~ age + sex + abo, transplant)
forest(x)


## cox models
dat <- within(na.omit(transplant), {
  event_ind <- +(event == 'death')
  futime <- futime + 1e-8
})


## coxphf model
x <- coxph(Surv(futime, event_ind) ~ age + sex + abo, dat)
x <- forest(x, plot = FALSE)
plot(x, show_conf = TRUE, xlim = c(0, 5))


## coxphf model
library('coxphf')
x <- coxphf(Surv(futime, event_ind) ~ age + sex + abo, dat)
forest(x, data = dat)

}
